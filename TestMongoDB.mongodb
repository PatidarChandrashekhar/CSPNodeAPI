// MongoDB Playground
// To disable this template go to Settings | MongoDB | Use Default Template For Playground.
// Make sure you are connected to enable completions and to be able to run a playground.
// Use Ctrl+Space inside a snippet or a string literal to trigger completions.

// Select the database to use.
use('PaymentGateway');

// The drop() command destroys all data from a collection.
// Make sure you run it against the correct database and collection.
//db.sales.drop();

// Insert a few documents into the PaymentGateway collection.
db.customerTransactions.insertMany(
[{
"id": "1",
"date": "2022-01-23",
"sender": {
"firstName": "John",
"lastName": "Smith",
"dateOfBirth":"1970-01-23",
"IDNumber":"100001"
},
"recipient": {
"firstName": "Jane",
"lastName": "doe",
"email":"janedoe@company.com",
"accountNumber":"200001",
"bank":"TD"
},
"Amount": 100.00,
"CurrencyCd": "CAD",
"Comments":"Utility bill",
"status": "COMPLETED"
},
{
"id": "2",
"date": "2022-01-30",
"sender": {
"firstName": "John2",
"lastName": "Smith",
"dateOfBirth":"1970-02-23",
"IDNumber":"100001"
},
"recipient": {
"firstName": "Jane2",
"lastName": "doe",
"email":"janedoe@company2.com",
"accountNumber":"200001",
"bank":"TD"
},
"Amount": 100.00,
"CurrencyCd": "USD",
"Comments":"Rent",
"status": "PENDING"
},
{
"id": "3",
"date": "2022-02-10",
"sender": {
"firstName": "John3",
"lastName": "Smith",
"dateOfBirth":"1970-03-23",
"IDNumber":"100001"
},
"recipient": {
"firstName": "Jane3",
"lastName": "doe",
"email":"janedoe@company3.com",
"accountNumber":"200001",
"bank":"CIBC"
},
"Amount": 300.00,
"CurrencyCd": "USD",
"Comments":"Insurance Premium",
"status": "IN PROGRESS"
},
{
"id": "4",
"date": "2022-06-06",
"sender": {
"firstName": "John4",
"lastName": "Smith",
"dateOfBirth":"1970-04-23",
"IDNumber":"100001"
},
"recipient": {
"firstName": "Jane4",
"lastName": "doe",
"email":"janedoe@company4.com",
"accountNumber":"200001",
"bank":"RBC"
},
"Amount": 200.00,
"CurrencyCd": "CAD",
"Comments":"Cash Transfer",
"status": "REJECTED"
}]
);

// Run a find command to view items sold on April 4th, 2014.
//db.customerTransactions.find({ date: { $gte: new Date('2014-04-04'), $lt: new Date('2014-04-05') } });
//db.customerTransactions.find({ status: { $in: ['COMPLETED', 'IN PROGRESS'] } });

// Build an aggregation to view total sales for each Transaction in 2014.
/*const aggregation = [
  { $match: { date: { $gte: new Date('2014-01-01'), $lt: new Date('2015-01-01') } } },
  { $group: { _id: '$item', totalSaleAmount: { $sum: { $multiply: [ '$price', '$quantity' ] } } } }
];*/

// Run the aggregation and open a cursor to the results.
// Use toArray() to exhaust the cursor to return the whole result set.
// You can use hasNext()/next() to iterate through the cursor page by page.
//db.sales.aggregate(aggregation);
